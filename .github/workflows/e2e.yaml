name: e2e

on:
  workflow_dispatch:
  push:
    branches: [ '*' ]
    tags-ignore: [ '*' ]

jobs:
  kubernetes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Flux
        uses: fluxcd/flux2/action@main
      - name: Setup Kubernetes
        uses: helm/kind-action@v1
        with:
          cluster_name: flux
      - name: Install Flux in Kubernetes Kind
        run: flux install
      - name: Setup cluster reconciliation
        run: |
          flux create source git flux-system \
          --url=${{ github.event.repository.html_url }} \
          --branch=${GITHUB_REF#refs/heads/} \
          --username=${GITHUB_ACTOR} \
          --password=${{ secrets.GITHUB_TOKEN }} \
          --ignore-paths="clusters/**/flux-system/"
          flux create kustomization flux-system \
          --source=flux-system \
          --path=./clusters/staging
      - name: Verify tenant reconciliation
        run: kubectl -n flux-system wait kustomization/infra-tenants --for=condition=ready --timeout=1m
      - name: Verify controllers reconciliation
        run: kubectl -n flux-system wait kustomization/infra-controllers --for=condition=ready --timeout=10m
      - name: Verify configs reconciliation
        run: kubectl -n flux-system wait kustomization/infra-configs --for=condition=ready --timeout=1m
      - name: Verify apps reconciliation
        run: kubectl -n flux-system wait kustomization/apps --for=condition=ready --timeout=5m
      - name: Verify helm reconciliation
        run: kubectl -n apps wait --for=condition=ready --timeout=5m helmrelease --all
      - name: Debug flux-system failure
        if: failure()
        run: |
          kubectl -n flux-system get all
          kubectl -n flux-system logs deploy/source-controller
          kubectl -n flux-system logs deploy/kustomize-controller
          kubectl -n flux-system logs deploy/helm-controller
          flux get all --all-namespaces
      - name: Debug all error events
        if: failure()
        run: kubectl get events --all-namespaces --field-selector type=Warning --sort-by=.metadata.creationTimestamp
